/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.79
 * Generated at: 2017-08-18 16:47:02 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.front.default_.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import org.slf4j.*;
import org.springframework.web.context.*;
import org.springframework.web.context.support.*;
import org.springframework.web.servlet.*;
import kr.co.redcore.GlobalConstants;
import kr.co.redcore.domain.*;
import kr.co.redcore.domain.view.*;
import kr.co.redcore.service.*;
import kr.co.redcore.service.banner.*;
import kr.co.redcore.service.member.*;
import kr.co.redcore.util.*;
import kr.co.redcore.util.string.*;

public final class loginForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/tld/redcore-tags.tld", Long.valueOf(1499746760326L));
    _jspx_dependants.put("/WEB-INF/views/common/common.jsp", Long.valueOf(1503074772450L));
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fspring_005fhtmlEscape_0026_005fdefaultHtmlEscape_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fspring_005fhtmlEscape_0026_005fdefaultHtmlEscape_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fspring_005fhtmlEscape_0026_005fdefaultHtmlEscape_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;


	pageContext.setAttribute("newline", "\n");

      if (_jspx_meth_spring_005fhtmlEscape_005f0(_jspx_page_context))
        return;

//Logger logger = LoggerFactory.getLogger(getClass());

WebApplicationContext wac = WebApplicationContextUtils.getWebApplicationContext(this.getServletContext(), FrameworkServlet.SERVLET_CONTEXT_PREFIX + "appServlet");
Properties configProp = (Properties)wac.getBean("configProp");

// 모바일에서 접근중인지 체크
int isMobile = 0;
String userAgent = request.getHeader("USER-AGENT");
String[] mobileOsType = {"iPhone", "iPod", "Android", "BlackBerry", "Windows CE", "Nokia", "Webos", "Opera Mini", "SonyEricsson", "Opera Mobi", "IEMobile"};

for (int i = 0, j = -1; i < mobileOsType.length; i++) {
	if (userAgent.indexOf(mobileOsType[i]) > -1) {
		// 모바일로 접근했을 때
		request.setAttribute("isMobile", isMobile);
		break;
	}
}

      out.write("<head>\t \t\t\t\t\r\n");
      out.write("\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t$(document).ready(function(){\r\n");
      out.write("\t\t\tif($.cookie(\"member_id\") != null) {\r\n");
      out.write("\t\t\t\t//alert(\"get cookies \" +  $.cookie(\"member_id\"));\r\n");
      out.write("\t\t\t\t$(\"#member_id\").val( $.cookie(\"member_id\"));\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#loginForm\").validate({\r\n");
      out.write("\t\t\t\trules: {\r\n");
      out.write("\t\t\t\t\tmember_id: { required: true },\r\n");
      out.write("\t\t\t\t\tpassword: { required: true },\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tmessages: {\r\n");
      out.write("\t\t\t\t\tmember_id: { required: \"이메일 주소를 입력하세요.\" },\r\n");
      out.write("\t\t\t\t\tpassword: { required: \"비밀번호를 입력하세요.\" },\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsubmitHandler: function (form) {\r\n");
      out.write("\t\t\t\t\tform.submit();\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#remember\").click(function(){\r\n");
      out.write("\t\t\t\t//alert(\"member_id \" + $(\"#member_id\").val());\r\n");
      out.write("\t\t\t\t $.cookie(\"member_id\", $(\"#member_id\").val(), {expires:365});\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"login-box\">\r\n");
      out.write("  \t\t<div class=\"login-logo\">\r\n");
      out.write("    \t\t로그인\r\n");
      out.write("  \t\t</div>\r\n");
      out.write("  \t\t<!-- /.login-logo -->\r\n");
      out.write("  \t\t<div class=\"login-box-body\">\r\n");
      out.write("    \t\t<form class=\"form-signin\" id=\"loginForm\" name=\"loginForm\" method=\"post\" action=\"login.do\">\r\n");
      out.write("      \t\t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" id=\"member_id\" name=\"member_id\" class=\"form-control\" placeholder=\"이메일 주소를 입력하세요.\" autofocus/>\r\n");
      out.write("        \t\t\t<span class=\"glyphicon glyphicon-user form-control-feedback\"></span>\r\n");
      out.write("      \t\t\t</div>\r\n");
      out.write("      \t\t\t<div class=\"form-group has-feedback\">\r\n");
      out.write("        \t\t\t<input type=\"password\" id=\"password\" name=\"password\" class=\"form-control\" placeholder=\"비밀번호를 입력하세요.\"/>\r\n");
      out.write("        \t\t\t<span class=\"glyphicon glyphicon-lock form-control-feedback\"></span>\r\n");
      out.write("      \t\t\t</div>\r\n");
      out.write("      \t\t\t<div class=\"row\">\r\n");
      out.write("\t        \t\t<div class=\"col-md-6\" align=\"right\">\r\n");
      out.write("\t          \t\t\t<div class=\"checkbox icheck\">\r\n");
      out.write("\t            \t\t\t<label><input type=\"checkbox\" id=\"remember\"/> 아이디저장</label>\r\n");
      out.write("\t          \t\t\t</div>\r\n");
      out.write("\t        \t\t</div>\r\n");
      out.write("\t        \t\t<div class=\"col-md-6\" align=\"right\">\r\n");
      out.write("\t          \t\t\t<button type=\"submit\" class=\"btn btn-default\">로그인</button>\r\n");
      out.write("\t        \t\t</div>\r\n");
      out.write("      \t\t\t</div>\r\n");
      out.write("      \t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-md-12\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t<div class=\"checkbox icheck\">\r\n");
      out.write("\t\t\t\t\t\t\t<a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/front/member/pass_search/emailInputForm.do\"/>비밀번호찾기</a> | <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/front/member/join/agreeForm.do\"/>회원가입</a>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("    \t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_spring_005fhtmlEscape_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  spring:htmlEscape
    org.springframework.web.servlet.tags.HtmlEscapeTag _jspx_th_spring_005fhtmlEscape_005f0 = (org.springframework.web.servlet.tags.HtmlEscapeTag) _005fjspx_005ftagPool_005fspring_005fhtmlEscape_0026_005fdefaultHtmlEscape_005fnobody.get(org.springframework.web.servlet.tags.HtmlEscapeTag.class);
    boolean _jspx_th_spring_005fhtmlEscape_005f0_reused = false;
    try {
      _jspx_th_spring_005fhtmlEscape_005f0.setPageContext(_jspx_page_context);
      _jspx_th_spring_005fhtmlEscape_005f0.setParent(null);
      // /WEB-INF/views/common/common.jsp(28,0) name = defaultHtmlEscape type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_spring_005fhtmlEscape_005f0.setDefaultHtmlEscape("true");
      int[] _jspx_push_body_count_spring_005fhtmlEscape_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_spring_005fhtmlEscape_005f0 = _jspx_th_spring_005fhtmlEscape_005f0.doStartTag();
        if (_jspx_th_spring_005fhtmlEscape_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_spring_005fhtmlEscape_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_spring_005fhtmlEscape_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_spring_005fhtmlEscape_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fspring_005fhtmlEscape_0026_005fdefaultHtmlEscape_005fnobody.reuse(_jspx_th_spring_005fhtmlEscape_005f0);
      _jspx_th_spring_005fhtmlEscape_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_spring_005fhtmlEscape_005f0, _jsp_getInstanceManager(), _jspx_th_spring_005fhtmlEscape_005f0_reused);
    }
    return false;
  }
}
